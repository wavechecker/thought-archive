---
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";

const {
  slug,                // e.g., "cancer"
  title,               // e.g., "Cancer — Guides"
  description,         // page description
  categoryNames = [],  // e.g., ["Cancer", "cancer"]
} = Astro.props;

const site = Astro.site?.toString().replace(/\/+$/, "") || "https://patientguide.io";
const pageUrl = `${site}/guides/${slug}`;

// Fetch guides in this category (case-insensitive matching via provided list)
const guides = await getCollection("guides", ({ data }) =>
  data?.draft !== true &&
  (categoryNames.length === 0
    ? true
    : categoryNames.includes(String(data?.category ?? "")))
);

// JSON-LD
const breadcrumbLd = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    { "@type": "ListItem", position: 1, name: "Guides", item: `${site}/guides` },
    { "@type": "ListItem", position: 2, name: title.replace(" — Guides","") || slug, item: pageUrl }
  ]
};

const collectionPageLd = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  name: title,
  description,
  url: pageUrl,
  inLanguage: "en",
  isPartOf: { "@type": "WebSite", name: "patientguide.io", url: site }
};
---

<Layout title={title} description={description}>
  <section class="prose max-w-3xl mx-auto py-8">
    <h1>{title}</h1>
    <p>{description}</p>

    {guides.length === 0 ? (
      <p>No guides found yet.</p>
    ) : (
      <ul class="list-disc list-inside mt-6 space-y-2">
        {guides.map((g) => (
          <li>
            <a href={`/guides/${g.slug}`}>{g.data?.title ?? "(Untitled)"}</a>
            {g.data?.description && <small> — {g.data.description}</small>}
          </li>
        ))}
      </ul>
    )}
  </section>

  <script type="application/ld+json" set:html={JSON.stringify(breadcrumbLd)} />
  <script type="application/ld+json" set:html={JSON.stringify(collectionPageLd)} />
</Layout>
