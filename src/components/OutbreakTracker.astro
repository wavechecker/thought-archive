---
/* Framework-free tracker: fetch JSON on the client and fill fields */
const {
  title = "Current Measles Situation",
  region = "United States",
  dataUrl = "/data/measles-us.json",
  cases,
  statesAffected,
  hospitalizations,
  deaths,
  lastUpdated,
  sourceName = "CDC",
  sourceUrl = "https://www.cdc.gov/measles/cases-outbreaks.html",
} = Astro.props;
---

<div class="border-l-4 border-red-600 bg-red-50 p-4 rounded-2xl shadow-sm mb-6" data-outbreak>
  <h3 class="font-semibold text-red-700">
    {title} — {region}
  </h3>

  <p class="text-sm mt-1">
    <strong data-field="cases">
      {typeof cases === "number" ? cases.toLocaleString() : "—"}
    </strong> confirmed cases
    <span data-field="statesLine" style="display:none">
      across <strong data-field="statesAffected">—</strong> states
    </span>.
  </p>

  <ul class="text-sm mt-2 list-disc ml-5">
    {typeof hospitalizations === "number" && (
      <li>Hospitalizations: <strong data-field="hospitalizations">{hospitalizations.toLocaleString()}</strong></li>
    )}
    {typeof deaths === "number" && (
      <li>Deaths: <strong data-field="deaths">{deaths.toLocaleString()}</strong></li>
    )}
  </ul>

  <p class="text-xs text-gray-600 mt-2">
    <span>Last updated <span data-field="lastUpdated">{lastUpdated ?? "—"}</span></span>
    {" · "}
    Source:
    {sourceUrl ? (
      <a href={sourceUrl} class="underline" rel="noopener noreferrer">{sourceName}</a>
    ) : (
      <span>{sourceName}</span>
    )}
  </p>

  <!-- Client-only inline script; safe for SSR parsing -->
  <script is:inline>
    (function () {
      const script = document.currentScript;
      const root = script && script.parentElement;
      if (!root) return;

      const DATA_URL = {JSON.stringify(dataUrl)};
      const $ = (sel) => root.querySelector(sel);
      const setText = (sel, val) => { const el = $(sel); if (el) el.textContent = val; };

      function fmt(n) {
        const nn = Number(n);
        return Number.isFinite(nn) ? nn.toLocaleString() : "—";
      }

      async function load() {
        try {
          const res = await fetch(DATA_URL, { cache: "no-store" });
          if (!res.ok) return;
          const j = await res.json();

          if (j.cases != null) setText('[data-field="cases"]', fmt(j.cases));

          if (j.statesAffected != null) {
            setText('[data-field="statesAffected"]', String(j.statesAffected));
            const line = $('[data-field="statesLine"]');
            if (line) line.style.display = "";
          }

          if (j.hospitalizations != null)
            setText('[data-field="hospitalizations"]', fmt(j.hospitalizations));

          if (j.deaths != null)
            setText('[data-field="deaths"]', fmt(j.deaths));

          if (j.lastUpdated) {
            const d = new Date(j.lastUpdated);
            setText(
              '[data-field="lastUpdated"]',
              isNaN(d.getTime()) ? String(j.lastUpdated) : d.toLocaleDateString()
            );
          }
        } catch { /* ignore */ }
      }

      load();
    })();
  </script>
</div>

