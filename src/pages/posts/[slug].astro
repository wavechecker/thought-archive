---
import Layout from "@/layouts/Layout.astro";
import { getCollection, getEntryBySlug } from "astro:content";
import { isValidDate, fmt } from "@/lib/date";

export const prerender = true;

// Build only published posts (draft !== true)
export async function getStaticPaths() {
  const entries = await getCollection("posts", ({ data }) => data?.draft !== true);
  return entries.map((e) => ({ params: { slug: e.slug } }));
}

const { slug } = Astro.params;

// Hard guard: if slug is missing or bad, 404 (never 500)
if (!slug || typeof slug !== "string") {
  return Astro.redirect("/404");
}

const entry = await getEntryBySlug("posts", slug);

// If somehow a stale path sneaks in (old cache, bot, etc.)
if (!entry || entry.data?.draft === true) {
  return Astro.redirect("/404");
}

// Render MD content + frontmatter
const { Content } = await entry.render();
const data = entry.data;

// Hero image (frontmatter override or fallback)
const hero = data?.image ?? "/og-default.png";
---

<Layout frontmatter={data}>
  <article class="mx-auto max-w-3xl">
    <header class="mb-6">
      <h1 class="text-3xl/tight font-semibold tracking-tight">
        {data?.title ?? "Untitled"}
      </h1>

      <p class="mt-2 text-sm text-slate-500">
        {data?.publishDate && isValidDate(data.publishDate) ? fmt(data.publishDate) : ""}
        {data?.updatedDate && ` â€¢ Updated ${fmt(data.updatedDate)}`}
      </p>

      <img
        src={hero}
        alt={data?.title ?? "Hero image"}
        class="mt-4 aspect-[1200/630] w-full rounded-xl object-cover"
        loading="lazy"
      />
    </header>

    <div class="prose prose-slate max-w-none">
      <Content />
    </div>

    {data?.tags?.length > 0 && (
      <ul class="mt-6 flex flex-wrap gap-2">
        {data.tags.map((t) => (
          <li class="rounded-full bg-slate-100 px-3 py-1 text-xs font-medium text-slate-700">
            #{t}
          </li>
        ))}
      </ul>
    )}
  </article>
</Layout>



