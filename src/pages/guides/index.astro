---
import { getCollection } from "astro:content";

// Inline helpers (no imports)
const isValidDate = (d) =>
  d instanceof Date && !isNaN(+d) && +d > +new Date("1971-01-01");
const fmt = (d) =>
  new Intl.DateTimeFormat("en-GB", { day: "2-digit", month: "short", year: "numeric" }).format(d);

const posts = await getCollection("guides");

// Sort by most recent valid date
posts.sort((a, b) => {
  const da = isValidDate(a.data.publishDate) ? +a.data.publishDate
           : isValidDate(a.data.updatedDate) ? +a.data.updatedDate : 0;
  const db = isValidDate(b.data.publishDate) ? +b.data.publishDate
           : isValidDate(b.data.updatedDate) ? +b.data.updatedDate : 0;
  return db - da;
});
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Guides â€¢ PatientGuide</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
  </head>
  <body>
    <h1>Guides</h1>
    <ul>
      {posts.map((post) => {
        const d = isValidDate(post.data.publishDate)
          ? post.data.publishDate
          : isValidDate(post.data.updatedDate)
            ? post.data.updatedDate
            : undefined;
        return (
          <li>
            <a href={`/guides/${post.slug}/`}>{post.data.title}</a>
            {d && <> â€” <time datetime={d.toISOString()}>{fmt(d)}</time></>}
          </li>
        );
      })}
    </ul>
  </body>
</html>




