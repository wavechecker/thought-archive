---
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";

const CATEGORY_KEYS = ["Type 1 Diabetes", "type 1 diabetes", "t1d", "diabetes"];
const PAGE_TITLE = "Type 1 Diabetes — Guide Hub";
const PAGE_DESC  = `Browse patient-friendly guides for ${PAGE_TITLE.split(" — ")[0]}.`;

const all = await getCollection("guides");
const norm = (s: unknown) => String(s ?? "").toLowerCase().trim();

const inCategory = (entry: any) => {
  const cat = norm(entry.data?.category);
  const tags = (entry.data?.tags ?? []).map(norm);
  const keys = CATEGORY_KEYS.map(norm);
  return (cat && keys.includes(cat)) || tags.some(t => keys.includes(t));
};

const guides = all
  .filter((e) => e.data?.draft !== true)
  .filter(inCategory)
  .sort((a, b) => {
    const da = new Date(a.data?.updatedDate ?? a.data?.publishDate ?? 0).valueOf();
    const db = new Date(b.data?.updatedDate ?? b.data?.publishDate ?? 0).valueOf();
    return db - da || String(a.data?.title).localeCompare(String(b.data?.title));
  });

const linkFor = (e: any) => `/guides/${e.slug}/`;
---

<Layout frontmatter={{ title: PAGE_TITLE, description: PAGE_DESC }}>
  <h1>{PAGE_TITLE}</h1>
  <p>{PAGE_DESC}</p>

  {guides.length === 0 ? (
    <p>No guides found.</p>
  ) : (
    <ul>
      {guides.map((g) => (
        <li>
          <a href={linkFor(g)}>{g.data?.title ?? "(Untitled)"}</a>
          {g.data?.description && <small> — {g.data.description}</small>}
        </li>
      ))}
    </ul>
  )}
</Layout>
