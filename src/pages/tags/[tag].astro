---
import { getCollection } from 'astro:content';

/** Build-time: enumerate every unique tag from posts */
export async function getStaticPaths() {
  const posts = await getCollection('posts', (p) => !p.data.draft);
  const tagSet = new Set<string>();

  for (const p of posts) {
    const tags = Array.isArray(p.data.tags) ? p.data.tags : [];
    for (const t of tags) tagSet.add(String(t).toLowerCase());
  }

  return Array.from(tagSet).map((t) => ({ params: { tag: t } }));
}

/** Page data for this tag */
const currentTag = String(Astro.params.tag || '').toLowerCase();

const posts = await getCollection('posts', (p) =>
  !p.data.draft &&
  Array.isArray(p.data.tags) &&
  p.data.tags.map((t) => String(t).toLowerCase()).includes(currentTag)
);

// newest first
posts.sort(
  (a, b) =>
    new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime()
);
---

<html lang="en">
  <head>
    <title>#{currentTag} â€” Thought-Archive</title>
    <meta name="description" content={`Posts tagged ${currentTag}.`} />
  </head>
  <body>
    <main class="max-w-3xl mx-auto px-4 py-10">
      <h1 class="text-3xl font-bold mb-6">#{currentTag}</h1>

      {posts.length === 0 ? (
        <p>No posts with this tag yet.</p>
      ) : (
        <ul class="space-y-6">
          {posts.map(({ slug, data }) => (
            <li class="border rounded-xl p-4">
              <a class="text-xl font-semibold hover:underline" href={`/posts/${slug}`}>
                {data.title}
              </a>
              <div class="text-sm opacity-70 mt-1">{data.publishDate}</div>
              {data.description && <p class="mt-2">{data.description}</p>}
              {Array.isArray(data.tags) && data.tags.length > 0 && (
                <div class="mt-2 text-sm opacity-70">
                  Tags: {data.tags.join(', ')}
                </div>
              )}
            </li>
          ))}
        </ul>
      )}
    </main>
  </body>
</html>
